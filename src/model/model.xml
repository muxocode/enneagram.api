<?xml version="1.0"?>
<doc>
    <assembly>
        <name>model</name>
    </assembly>
    <members>
        <member name="M:model.ModelExtensions.AddService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add a IRepository
            </summary>
            <typeparam name="T">Type</typeparam>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:model.ModelExtensions.AddUnitOfWork(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add IEntityUnitOfWork and IUnitOfWork
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:model.ModelExtensions.AddErrorHandler(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add a error handler
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.#ctor(Microsoft.EntityFrameworkCore.DbContext,mxcd.core.unitOfWork.IEntityUnitOfWork)">
            <summary>
            ctor
            </summary>
            <param name="context"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.Add(`0)">
            <summary>
            Adds an entity
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.Remove(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Removes with expression, it will be executed on db transaction
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.Remove``1(``0)">
            <summary>
            Removes by key
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.Remove(`0[])">
            <summary>
            Removes a set of items
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.Find``1(``0)">
            <summary>
            Get a set of entities
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get a set of entities
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.Update(`0)">
            <summary>
            Update
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:model.repository.RepositoryGeneric`1.Update``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},``0)">
            <summary>
            Updates by expression
            </summary>
            <typeparam name="TUpdate"></typeparam>
            <param name="expression"></param>
            <param name="objToUpdate"></param>
            <returns></returns>
        </member>
        <member name="T:model.unitOfWork.UnitOfWork">
            <summary>
            Unit of Work
            </summary>
        </member>
        <member name="M:model.unitOfWork.UnitOfWork.#ctor(mxcd.dbContextExtended.DbContextExtended)">
            <summary>
            Ctor
            </summary>
            <param name="context"></param>
        </member>
    </members>
</doc>
